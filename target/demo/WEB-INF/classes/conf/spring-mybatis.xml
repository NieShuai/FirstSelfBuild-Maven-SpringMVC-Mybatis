<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/aop 
    					http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                        http://www.springframework.org/schema/tx 
    					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">

		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		
		<property name="url">
			<value>${jdbc.url}</value>
		</property>

		<property name="username">
			<value>${jdbc.username}</value>
		</property>

		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${druid.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${druid.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<!-- <property name="maxIdle" value="${druid.maxIdle}"></property> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${druid.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${druid.maxWait}"></property>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${druid.filters}" />
		<!-- 连接属性 -->

		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>

	<!-- 配置mybatis事务管理 -->
	<!-- <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean> -->
	<!-- 使用注解进行事务管理 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<!-- configLocation为mybatis属性 mapperLocations为所有mapper -->
		<property name="configLocation" value="classpath:conf/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:com/demo/mapper/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.demo.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- Spring aop事务管理 -->
	<aop:config>
		<aop:pointcut id="servicePointcut" expression="execution(public * com.demo.service.*.*.*(..))" />
	</aop:config>

</beans>
